---
layout: post
title: "Using OpenTelemetry for data pipeline monitoring"
date: 2025-03-16 09:41:35 +0100
author: tomasz
tags: data programming
---

[OpenTelemetry](https://opentelemetry.io/) (OT) according to their page is "an observability framework and toolkit designed to facilitate the generation, export, collection of telemetry data such as traces, metrics, and logs". While it's mostly used for monitoring applications or servers nothing blocks it from being used for other purposes such as gathering metrics on e.g. batch jobs. I didn't find much documentation about using it for that purpose so I wanted to explore this subject a little.

There are currently 3 types of things in the OT standard: logs, metrics, and traces.

## Logs

This is rather obvious, log is a timestamped message. One can create log messages in the [OT format](https://opentelemetry.io/docs/concepts/signals/logs/).

## Metrics

[Metric](https://opentelemetry.io/docs/concepts/signals/metrics/) is a numerical measurement with some context (dimensions) attached. Now this is where we need to put some thought into what do we actually want to measure.

First thing that comes to mind would be job execution time (e.g. in seconds). We would also need to attach appropriate contextual information so we know what a given value is referring to. That could vary from case to case but probably at the very least we should attach information about the job like name or id and about given job run like run id (probably a uuid but could be any other unique value which might be generated by the scheduler). We could also add start and end datetime.

It would be very useful to log whether a given job run was a success or failure. Whether that should be a dimension to a metric like execution time or a metric on its own I am not sure.

We could also use some additional info for successful run such as: number of rows processed, number of files processed (or API calls), input data size in bytes.

Measurements in Open Telemetry standard have to have [a type](https://opentelemetry.io/docs/concepts/signals/metrics/#metric-instruments) but for our case I think the metrics would mostly be of type "Counter" (or Asynchronous Counter).

## Spans
